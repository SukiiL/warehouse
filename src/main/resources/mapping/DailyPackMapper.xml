<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.warehouse.mapper.DailyPackMapper">

    <resultMap id="BaseResultMap" type="com.warehouse.entity.dailyPack.DailyMaterial" >
        <result column="id" property="id" />
        <result column="bid" property="bid" />
        <result column="date" property="date" />
        <result column="material_type_id" property="materialTypeId" />
        <result column="material_total_quantity" property="materialQuantity" />
    </resultMap>



    <select id="countMaterialNum" resultMap="BaseResultMap" parameterType="com.warehouse.entity.RequestBrand">
        SELECT bid,material_type_id, material_total_quantity,
			ROUND(material_total_quantity/(SELECT SUM(material_quantity) FROM daily_material
			                            WHERE bid = #{bid} and date between #{startDate} and #{endDate})*100,1)
			as materialPercent
        from (SELECT bid,material_type_id, sum(material_quantity) as material_total_quantity
            FROM daily_material
            WHERE bid = #{bid} and date between #{startDate} and #{endDate}
            GROUP BY material_type_id) x
        ORDER BY material_total_quantity DESC
    </select>


    <select id="findPackAvg" resultType="com.warehouse.entity.dailyPack.DailyTotal" parameterType="com.warehouse.entity.RequestBrand">
        SELECT bid,
                ROUND(sum(total_weight)/sum(pack_num),2) as avgWeight,
                ROUND(sum(total_price)/sum(pack_num),2) as avgPrice,
                ROUND(sum(total_sku)/sum(pack_num),2) as avgSku,
                ROUND(sum(total_good_quantity)/sum(pack_num),2) as avgGoodQuantity
        FROM daily_total
        WHERE bid = #{bid} and date between #{startDate} and #{endDate}
        GROUP BY bid
    </select>


    <select id="countSkuRank" resultType="com.warehouse.entity.dailyPack.DailySku" parameterType="com.warehouse.entity.RequestBrand">
        SELECT bid, sku, packNum, RANK() OVER(order by packNum desc) as skuPackRank,
			ROUND(packNum/(SELECT SUM(pack_num) FROM daily_sku
			                            WHERE bid = #{bid} and date between #{startDate} and #{endDate})*100,1)
			as skuPackPercent
        FROM (SELECT bid,sku, sum(pack_num) as packNum
            FROM daily_sku
            WHERE bid = #{bid} and date between #{startDate} and #{endDate}
            GROUP BY sku) x
        ORDER BY packNum DESC
    </select>


    <select id="countPackGood" resultType="com.warehouse.entity.dailyPack.DailySku" parameterType="com.warehouse.entity.RequestBrand">
        SELECT sku, ROUND(sum(good_num)/sum(pack_num),1) as packAvgGoodQuantity
        FROM daily_sku
        WHERE bid = #{bid} and date between #{startDate} and #{endDate}
        GROUP BY sku
    </select>

    <select id="countAvgSku" resultType="com.warehouse.entity.dailyPack.DailySku" parameterType="com.warehouse.entity.RequestBrand">
        SELECT ROUND(sum(sku * pack_num)/sum(pack_num),1) as avgSku
        FROM daily_sku
        WHERE bid = #{bid} and date between #{startDate} and #{endDate} and sku > 1
    </select>

    <select id="goodMiscPortion" resultType="com.warehouse.entity.dailySales.DailySales" parameterType="com.warehouse.entity.RequestBrand">
        SELECT  good_name, good_id, sum(good_sales_num) as goodSalesNum,
                                    sum(misc_pack_quantity) as  miscPackQuantity,
                                    sum(pack_quantity) as  packQuantity,
                                    ROUND(sum(misc_pack_quantity)/sum(pack_quantity),2) as miscPackPortion
                FROM daily_sales
				WHERE bid = #{bid} and date between #{startDate} and #{endDate}
				GROUP BY good_name,good_id
				ORDER BY goodSalesNum DESC
				LIMIT #{limit}
    </select>

    <select id="packMiscPortion" resultType="com.warehouse.entity.dailyPack.DailyTotal" parameterType="com.warehouse.entity.RequestBrand">
        SELECT sum(pack_num) as packNum,
                sum(misc_pack_num) as miscPackNum,
                ROUND(sum(misc_pack_num)/sum(pack_num),2) as miscPackPortion
            FROM daily_total
            WHERE bid = #{bid} and date between #{startDate} and #{endDate}
    </select>

    <select id="countEfficiency" resultType="com.warehouse.entity.dailyPack.EfficiencyPerArea" parameterType="com.warehouse.entity.RequestBrand">
        SELECT ROUND(AVG(a.pack_num)/b.area,2) AS efficiencyPerSquareMeter, b.start_date as startDate, b.end_date as endDate
        FROM daily_total a JOIN brand_area b
        ON (a.date BETWEEN  #{startDate} and #{endDate} and a.bid = #{bid} and
        a.bid = b.bid and a.date BETWEEN b.start_date and  b.end_date)
        GROUP BY startDate
        order by startDate asc
    </select>


</mapper>